[extension_name]
Google Sheets by Christina
[insert_external]
<script src='https://cdn.jsdelivr.net/gh/christinna9031/LioranBoard-Files@main/lib/google_sheets_minified.js'></script>
<!--
 * @name: Google Sheets, @version: 1.0, @author: Christinna K.
 * -->
<div><p>Google Sheets by Christina is installed</p></div>
[insert_command]
LBSendExtCommand('Google Sheets INIT', {
 refreshToken: 'string', apiKey: 'string', itchKey: 'string', 'ShowAlerts|true|false|': 'boolean',
});
LBSendExtCommand('Google Sheets OPTIONS 1', {
 'Clear Data|true|false|': 'boolean', 'Find Replace|true|false|': 'boolean', 'Split Text|true|false|': 'boolean', 'Auto Fill|true|false|': 'boolean', 'Randomize|true|false|': 'boolean', 'Merge Cells|true|false|': 'boolean', 'Unmerge Cells|true|false|': 'boolean',
});
LBSendExtCommand('Google Sheets OPTIONS 2', {
 'Add Sheet|true|false|': 'boolean', 'Duplicate Sheet|true|false|': 'boolean', 'Insert Range|true|false|': 'boolean', 'Delete Range|true|false|': 'boolean', 'Copy Paste|true|false|': 'boolean', 'Delete Duplicates|true|false|': 'boolean', 'Create Spreadsheet|true|false|': 'boolean',
});
[insert_hook]
case (LioranBoardJSON.datatype.match(/GoogleSheets/) || {}).input: {
const defaultValues = { SpreadsheetID: 'string', SheetName: 'string', Range: 'string' };
if (LioranBoardJSON.datatype == 'GoogleSheetsINIT') {
const defaultExt = {
'Get Data': {...defaultValues,
 'Dimension|COLUMNS|ROWS|': 'string', 'Render|FORMATTED_VALUE|UNFORMATTED_VALUE|FORMULA|': 'string', 'DeleteEmpty|true|false|': 'boolean', StackName: 'string',
},
 'Append Data': { ...defaultValues,
 'Dimension|COLUMNS|ROWS|': 'string', 'InputType|USER_ENTERED|RAW|': 'string', 'InsertType|INSERT_ROWS|OVERWRITE|': 'string', Values: 'string',
},
'Find Data': {...defaultValues,
 find: 'string', 'Dimension|COLUMNS|ROWS|': 'string', Span: 'string', Variable: 'string',
},
'Update Data': {...defaultValues,
 'Dimension|COLUMNS|ROWS|': 'string', 'InputType|USER_ENTERED|RAW|': 'string', Values: 'string', returnStack: 'string',
},
'Sort Range': { ...defaultValues, 'sortOrder|ASCENDING|DESCENDING|': 'string', dimIndex: 'string' },
'Batch Update': { Amount: 'real' },
};
for (const [key, values] of Object.entries(defaultExt)) {
LBSendExtCommand(`Google Sheets ${key}`, values);
sessionStorage.setItem('GoogleSheetsParams', JSON.stringify(LioranBoardJSON));
}
} else if (LioranBoardJSON.datatype == 'GoogleSheetsOPTIONS1' || LioranBoardJSON.datatype == 'GoogleSheetsOPTIONS2') {
const customExt = {
'Clear Data': { ...defaultValues },
'Auto Fill': { ...defaultValues, 'useAlternateSeries|true|false|': 'boolean' },
'Duplicate Sheet': {
 SpreadsheetID: 'string', SourceSheetName: 'string', newSheetName: 'string', insertSheetIndex: 'real',
},
'Find Replace': { ...defaultValues, find: 'string', replace: 'string', 'matchCase|true|false|': 'boolean', 'matchEntireCell|true|false|': 'boolean' },
'Split Text': { ...defaultValues, delimiter: 'string' },
'Add Sheet': {
 SpreadsheetID: 'string', Name: 'string', Index: 'real', 'Hidden|false|true|': 'boolean',
},
'Insert Range': { ...defaultValues, 'shift|ROWS|COLUMNS|': 'string' },
'Delete Range': { ...defaultValues, 'shift|ROWS|COLUMNS|': 'string' },
'Randomize': { ...defaultValues },
'Copy Paste': { ...defaultValues, TargetSheet: 'string', TargetRange: 'string', 'PasteType|PASTE_NORMAL|PASTE_VALUES|PASTE_FORMAT|PASTE_FORMULA|': 'string', 'PasteOrientation|NORMAL|TRANSPOSE|': 'string' },
'Delete Duplicates': { ...defaultValues, 'dimension|ROWS|COLUMNS|': 'string', StartIndex: 'real', EndIndex: 'real' },
'Merge Cells': { ...defaultValues, 'mergeType|MERGE_ALL|MERGE_COLUMNS|MERGE_ROWS|': 'string' },
'Unmerge Cells': { ...defaultValues},
'Create Spreadsheet': { Title: 'string', Variable: 'string' },
};
delete LioranBoardJSON.datatype;
for (const [key, values] of Object.entries(customExt)) {
if (LioranBoardJSON[key.replace(/\s+/g, '')]) {
const name = `Google Sheets ${key}`;
LBSendExtCommand(name, values);}
}
} else {
LBGoogleSheets(LioranBoardJSON);
}
} break;
[insert_script]
async function LBGoogleSheets(userData) {
  let _p$SheetName;
  //console.log(userData);
  const p = userData;
  const d = new LBGoogleSheetsAPI();
  const params = JSON.parse(sessionStorage.getItem('GoogleSheetsParams')) || {};
  const { refreshToken } = params;
  const { ShowAlerts } = params;
  const { apiKey } = params;
  const userKey = params.itchKey; 
  const request = p.datatype.slice('GoogleSheets'.length);
  const range = (p === null || p === void 0
      ? void 0
      : (_p$SheetName = p.SheetName) === null || _p$SheetName === void 0
      ? void 0
      : _p$SheetName.length) > 0
      ? `${p.SheetName}!${p.Range}`
      : p.Range;
  const verifiedInput = await verifyInput();
  const accessToken = await checkAccessToken(
    sessionStorage.getItem('GoogleSheetsToken'),
  );
  if (!verifiedInput || !refreshToken || !accessToken) return;
  d.setParams(accessToken, p.SpreadsheetID, apiKey);
  const gridRange = range && request !== 'GetData'
      ? await d.getGridRange(p.SpreadsheetID, range, p.SheetName)
      : undefined;
  const b = window.GoogleSheetsBatch || undefined;

  if (request === 'BatchUpdate') {
    window.GoogleSheetsBatch = new BatchUpdate(p);
    setTimeout(() => {
      window.GoogleSheetsBatch = undefined;
    }, 10000);
    return;
  }

  if (b && request === 'UpdateData') {
    ExecuteBatch(p);
    return;
  }

  await d[request](p, range, gridRange)
    .then((response) => responseHandler(response))
    .catch((e) => {
      console.log(e);
      LBAlert(`Google Sheets Error:${e}`);
    });

  function responseHandler(r) {
    let stack;
    let count;
    if (ShowAlerts) LBAlert(`Google Sheets: Request ${request} was successful.`);
    switch (request) {
      default:
        break;

      case 'UpdateData':
        if (p.returnStack == 0) return;
        stack = [];
        r.updatedData.values[0].forEach((value) => {
          stack.push(value);
        });
        LBStackDelete(p.returnStack);
        LBStackAppend(p.returnStack, stack);
        break;

      case 'FindData':
        processFoundData(r, p);
        break;

      case 'CreateSpreadsheet':
        createLookupSheet(r.spreadsheetId);
        LBSetValue(p.Variable, r.spreadsheetId);
        break;

      case 'GetData':
        count = 1;
        r.values.forEach((e) => {
          stack = [];

          if (e) {
            stack.push(e);
            stack = p.DeleteEmpty == true
                ? stack.flat().filter((item) => item !== null && item !== '')
                : stack.flat();
            LBStackDelete(`${p.StackName}${count}`);
            LBStackAppend(`${p.StackName}${count}`, stack);
            ++count;
          }
        });
        break;

      case 'DuplicateSheet':
        sessionStorage.setItem(
          `${p.SpreadsheetID}_${p.newSheetName}`,
          r.replies[0].duplicateSheet.properties.sheetId,
        );
        break;

      case 'AddSheet':
        sessionStorage.setItem(
          `${p.SpreadsheetID}_${p.Name}`,
          r.replies[0].addSheet.properties.sheetId,
        );
    }
  }

  async function verifyInput() {
    if (!refreshToken) {
 LBAlert(
      'Google Sheets Error: Initialize the extension with valid refresh token first.',
    );
}
    if (!apiKey) LBAlert('Google Sheets Error: Missing API Key.');
    if (
      !(
        request == 'CreateSpreadsheet'
      || request == 'BatchUpdate'
      || p.SpreadsheetID != 0
      )
    ) LBAlert('Google Sheets Error: Missing Spreadsheet ID.');
    return true;
  }

  function BatchUpdate(br) {
    this.amount = br.Amount;
    this.count = 0;
    this.requests = []; //  this.batchID = br.batchID;

    this.addRequest = function (request) {
      delete request.datatype;
      this.requests[this.count] = request;
      this.count++;
    };
  }

   function processFoundData(r, userInput) {
    const rowIndex = r.updatedData.values[0][0]; // R2C1 - R2C100
    if (isNaN(rowIndex)) {
      LBAlert('Google Sheets Find Data: No match found.');
      return;
    }
    const columnIndex = r.updatedData.values[1][0];
    const a1Notation = r.updatedData.values[2][0];
    const spanStart = parseInt(userInput.Span.split(':')[0]) || 1;
    const spanEnd = parseInt(userInput.Span.split(':')[1]) || 1000;
    let foundRange
    if (p.Dimension == 'COLUMNS') {
      foundRange = `R${rowIndex}C${spanStart}:R${rowIndex}C${spanEnd}`;
    } else {
      foundRange = `R${spanStart}C${columnIndex}:R${spanEnd}C${columnIndex}`;
    }
    foundRange =  (p.SheetName.length > 0) ? `${p.SheetName}!${foundRange}` : foundRange

    const req = {
      Dimension: p.Dimension,
      Render: 'FORMATTED_VALUE',
    };
    d.GetData(req, foundRange)
      .then((foundVal) => {
        const stack = [];
        foundVal.values.forEach((cell) => {
          stack.push(cell[0]);
        });
        LBSetValue(userInput.Variable, a1Notation);
        LBStackDelete(userInput.Variable);
        LBStackAppend(userInput.Variable, stack);
      })
      .catch((e) => LBAlert(`Google Sheets Error: ${e}`));
  }

  async function ExecuteBatch(data) {
    b.addRequest(data);

    if (b.count == b.amount) {
      await d
        .BatchUpdateData(b.requests)
        .catch((e) => LBAlert(`Google Sheets Error: ${e}`));
      window.GoogleSheetsBatch = undefined;
    }
  }

  async function createLookupSheet(spreadsheetId) {
    d.setSpreadsheetID(spreadsheetId);
    const sheetRequest = {
      Name: 'Lookup_Sheet',
      Index: '1',
      Hidden: true,
    };
    await d
      .AddSheet(sheetRequest)
      .catch((e) => LBAlert(`Google Sheets Error: ${e}`));
  }

  async function checkAccessToken(token) {
    if (window.GoogleSheetsTokenTimer) clearTimeout(window.GoogleSheetsTokenTimer);
    const tokenCreated = sessionStorage.getItem('GoogleSheetsTokenCreated');
    let checkExpiry = Date.now() - tokenCreated;

    if (tokenCreated === undefined || checkExpiry > 3500000 || !token) {
      const newToken = await getAccessToken().catch((e) => {
        if (e.search(/exceeded/g)) e = 'API request limit exceeded. Slow down!';
        console.log(e);
        LBAlert(`Google Sheets Error: ${e}`);
      });

      if (!newToken) {
        LBAlert(
          'Google Sheets Error: Something went wrong retrieving access token.',
        );
        return;
      }

      sessionStorage.setItem('GoogleSheetsToken', newToken);
      sessionStorage.setItem('GoogleSheetsTokenCreated', Date.now());
      token = newToken;
      checkExpiry = 0;
    }

    window.GoogleSheetsTokenTimer = setTimeout(async () => {
      checkAccessToken(token);
    }, 3500000 - checkExpiry);
    return token;
  } /// / comment this function and use the function below if you're using your own project credentials

  async function getAccessToken() {
    let token;
    const response = await fetch(
      `https://igwyspoauk.execute-api.us-west-2.amazonaws.com/default/accesstoken?refreshToken=${refreshToken}`,
      {
        method: 'GET',
        headers: {
          'X-Api-Key': userKey,
        },
      },
    );
    const data = await response.json();

    if (!response.ok) {
      const error = data.message || 'Something went wrong.';
      throw error;
    } else {
      token = data.access_token;
    }

    return token;
  }
  /*
    Want to use your own Google Cloud project credentials?
  1. Create a new Google Cloud project, configure Oauth consent screen and create Oauth Client ID credentials.
  2. Authorize user to retrieve authorization code
  $redirectURI = redirect URI to process the code returned
  $scope = auth scope https://developers.google.com/sheets/api/guides/authorizing
  $base url = https://accounts.google.com/o/oauth2/v2/auth?client_id=${clientID}&redirect_uri=${redirectURI}&response_type=code&scope=${scope}&access_type=offline&prompt=consent
   3. Once redirected, use the returned $code to retrieve the refresh token:
  $base url = 'https://oauth2.googleapis.com/token?client_id=${clientID}&client_secret=${clientSecret}&grant_type=authorization_code&code=${code}&redirect_uri=${redirectURI}
  3. Replace the function below with your own credentials, comment it out and comment the original function above:
  $clientID = your client ID
  $clientSecret = your client secret
  $refreshToken = your refresh token
  '
   async function getAccessToken() {
    await fetch(`https://oauth2.googleapis.com/token?client_id=${clientID}&client_secret=${clientSecret}&grant_type=refresh_token&refreshToken=${refreshToken}`, {
      method: 'POST',
    })
  const data = await response.json();
        if (!response.ok) {
          const error = data.message || 'Something went wrong.';
          throw error
        } else {
    token = data.access_token
        }
        return token;
  }
  } */
}
[insert_over]
[force]
version="1.44"
trigger0="Google Sheets Installed"
[buttons_7x4]
activepress="0.000000"
border_size="0.000000"
combine="1010.000000"
type="nothing"
[buttons_6x4]
activepress="0.000000"
border_size="0.000000"
combine="10.000000"
type="websocketaction+"
picture=""
text="get refresh # token"
color="162.000000"
group_id=""
button_id="ID220"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="https://christinna9031.github.io/LioranBoard-Files/sheetsauth.html"
websocketaction0="67.000000"
[buttons_5x4]
activepress="0.000000"
border_size="0.000000"
combine="1002.000000"
type="nothing"
[buttons_4x4]
activepress="0.000000"
border_size="0.000000"
combine="1002.000000"
type="nothing"
[buttons_3x4]
activepress="0.000000"
border_size="0.000000"
combine="1002.000000"
type="nothing"
[buttons_2x4]
activepress="0.000000"
border_size="0.000000"
combine="1002.000000"
type="nothing"
[buttons_1x4]
activepress="0.000000"
border_size="0.000000"
combine="1002.000000"
type="nothing"
[buttons_0x4]
activepress="0.000000"
border_size="0.000000"
combine="2.000000"
type="websocketaction+pubsubaction+"
picture=""
text="Google Sheets by Christina K."
color="0.000000"
group_id=""
button_id="ID175"
extensiontrigger0="Google Sheets Installed"
pubsubaction0="7.000000"
pubsubqueue="0.000000"
websocketdelay9="1000.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="sheetTrigger"
websocketaction9="60.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="https://christinna9031.itch.io/"
websocketaction8="67.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="Thank you for installing Google Sheets by Christina K.! # 1. Read the setup guide that just opened in your browser. # 2. Set all your variables in the INIT button. # 3. Follow the numbered premade buttons 1-15. in their order while looking at your spreadsheet and at the commands inside the buttons. # This should help you understand how the commands work. # There is a video walkthrough available as well in the setup guide (intended for English version of Google Sheets). # 4. Enjoy! "
websocketaction7="118.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="https://christinna9031.github.io/LBDocumentation/externalext.html#Googlesheets"
websocketaction6="67.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5="1"
websocketvalue4_5="2"
websocketvalue3_5="þExtensionþ"
websocketvalue2_5="=="
websocketvalue1_5="sheetTrigger"
websocketaction5="121.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="sheetTrigger"
websocketaction4="99.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="https://github.com/sponsors/christinna9031"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="If you would like to support me in creating more extensions, please consider sponsoring me!"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="Use at your own risk. The creator is not responsible for any lost data due to bugs or user errors."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Make sure to always back up your data before using the extension."
websocketaction0="92.000000"
[buttons_7x3]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Delete # Range"
color="16711752.000000"
group_id=""
button_id="ID168"
websocketdelay5="0.000000"
websocketvalue8_5="Saturday;Monday;Friday;Bla"
websocketvalue7_5="OVERWRITE"
websocketvalue6_5="USER_ENTERED"
websocketvalue5_5="ROWS"
websocketvalue4_5="A3:A4"
websocketvalue3_5=""
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Delete Range"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="shift : ROWS = existing cells will be shifted upward, COLUMNS = cells will be shifted left"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = the range of cells to delete. Example: A1:A10."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will delete a range of cells, shifting other cells into the deleted area."
websocketaction0="92.000000"
[buttons_6x3]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Insert # Range"
color="16711752.000000"
group_id=""
button_id="ID154"
websocketdelay5="0.000000"
websocketvalue8_5="Saturday;Monday;Friday;Bla"
websocketvalue7_5="OVERWRITE"
websocketvalue6_5="USER_ENTERED"
websocketvalue5_5="ROWS"
websocketvalue4_5="A3:A4"
websocketvalue3_5=""
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Insert Range"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="shift =  dimension to be shifted when inserting cells. ROWS = shifted down, COLUMNS = shifted right."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range to insert new cells into. Example: A1:A2."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will insert cells into a range, shifting the existing cells over or down."
websocketaction0="92.000000"
[buttons_5x3]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="15. Delete # Duplicates"
color="16711752.000000"
group_id=""
button_id="ID172"
websocketdelay9="0.000000"
websocketvalue8_9="Saturday;Monday;Friday;Bla"
websocketvalue7_9="1"
websocketvalue6_9="0"
websocketvalue5_9="COLUMNS"
websocketvalue4_9="A1:A10"
websocketvalue3_9=""
websocketvalue2_9="/$spreadsheetID$/"
websocketvalue1_9="Google Sheets Delete Duplicates"
websocketaction9="71.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="***EXAMPLE: We can delete the second duplicate Melonax entry that we accidentally added earlier."
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="EndIndex = The end (exclusive) of the span.  The columns in the range to analyze for duplicate values."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="StartIndex = The start (inclusive) of the span. The columns in the range to analyze for duplicate values."
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Dimension = dimension to analyze for duplicate values"
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="Range = The range to remove duplicates rows from."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1=" duplicates of values in any previous row. Removes duplicates with different letter cases, formatting, or formulas"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will remove rows within this range that contain values in the specified columns that are -- >"
websocketaction0="92.000000"
[buttons_4x3]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="14. Clear # Data"
color="16711752.000000"
group_id=""
button_id="ID105"
websocketdelay5="0.000000"
websocketvalue8_5="Saturday, Monday"
websocketvalue7_5="Saturday;Monday;Friday;Bla"
websocketvalue6_5="USER_ENTERED"
websocketvalue5_5="COLUMNS"
websocketvalue4_5="B2:B7"
websocketvalue3_5=""
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Clear Data"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="***EXAMPLE: We clear all user points. They have been all randomized already anyway!"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range to clear the data from. Example: A1:A10."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will CLEAR all data in the selected range. "
websocketaction0="92.000000"
[buttons_3x3]
activepress="0.000000"
border_size="0.000000"
combine="1004.000000"
type="nothing"
[buttons_2x3]
activepress="0.000000"
border_size="0.000000"
combine="4.000000"
type="websocketaction+"
picture=""
text="7. Find Data"
color="16749610.000000"
group_id=""
button_id="ID74"
websocketdelay14="0.000000"
websocketvalue8_14=""
websocketvalue7_14=""
websocketvalue6_14=""
websocketvalue5_14=""
websocketvalue4_14=""
websocketvalue3_14=""
websocketvalue2_14=""
websocketvalue1_14="If we change the Span to 1:2 instead of 1:3, the foundData stack will only contain Melonax, 30. "
websocketaction14="92.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13=""
websocketvalue2_13=""
websocketvalue1_13=" in 'foundData' stack. The stack should contain Melonax, 30, January."
websocketaction13="92.000000"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12=""
websocketvalue6_12=""
websocketvalue5_12=""
websocketvalue4_12=""
websocketvalue3_12=""
websocketvalue2_12=""
websocketvalue1_12="All the retrieved values for the row with Melonax (to get her points and month) will be placed -->"
websocketaction12="92.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="***EXAMPLE: The extension finds Melonax in cell A4, which will be placed in 'foundData' variable."
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10="foundData"
websocketvalue7_10="1:3"
websocketvalue6_10="COLUMNS"
websocketvalue5_10="Melonax"
websocketvalue4_10="A2:A4"
websocketvalue3_10="Sheet1"
websocketvalue2_10="/$spreadsheetID$/"
websocketvalue1_10="Google Sheets Find Data"
websocketaction10="71.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="A stack containing the returned row/column values will be also created (same name as the variable). "
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="Variable - variable to save the cell's coordinates."
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="If Span is set to 1:5, it will return row 1-5 if you search by column and column A-E if you search by row."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="Span - the range of the rows/columns to retrieve. If set to 0, the whole column/row is returned. -->"
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Dimension - please select COLUMNS or ROWS depending on whether your range is a column or row. "
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4=" find = string to find (must exactly match the cell contents, case sensitive)"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range - range to search. Must be exactly one column or one row, i.e. A1:A10 or A1:K1. "
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SpreadSheetID = spreadsheet to search in, SheetName = sheet name to search in (must be filled)"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="Must be an exact match. Finds the first occurence only. "
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Matches a string/value to a cell in a single column or row and returns its coordinates + related values. "
websocketaction0="92.000000"
[buttons_1x3]
activepress="0.000000"
border_size="0.000000"
combine="1003.000000"
type="nothing"
[buttons_0x3]
activepress="0.000000"
border_size="0.000000"
combine="3.000000"
type="websocketaction+"
picture=""
text="6. Get Data"
color="16749610.000000"
group_id=""
button_id="ID156"
websocketdelay11="0.000000"
websocketvalue8_11="getData"
websocketvalue7_11="true"
websocketvalue6_11="UNFORMATTED_VALUE"
websocketvalue5_11="COLUMNS"
websocketvalue4_11="A2:C4"
websocketvalue3_11=""
websocketvalue2_11="/$spreadsheetID$/"
websocketvalue1_11="Google Sheets Get Data"
websocketaction11="71.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10=""
websocketvalue2_10=""
websocketvalue1_10="getData1 containing all names, getData2 containing all points and getData3 containing all months"
websocketaction10="92.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="***EXAMPLE: If you followed the previous examples, you should get three stacks -->"
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8=" 2 columns of data, you will get back 'getData1' and 'getData1' stacks, each containing 1 row of values."
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="StackName = name of the stack to save the data into. For a stack  'getData' and your request for -->"
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="DeleteEmpty = do not include empty values in the stack if found between cells with non empty ones. "
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Dimension = whether to retrieve data by rows or columns "
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="R = rows, C = columns, i.e. R1C1:R1C10 retrieves the first cell in the first 10 columns"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range to retrieve the data from. Can be A1 notation (A1:B100) or R1C1 notation (R1C1:R1C10) -->"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL). Must be made publicly accessible."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will retrieve data from your Spreadsheet based on the range."
websocketaction0="92.000000"
[buttons_7x2]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Unmerge # Cells"
color="16727040.000000"
group_id=""
button_id="ID178"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5="MERGE_ALL"
websocketvalue4_5="C7:D8"
websocketvalue3_5=""
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Unmerge Cells"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="all will be unmerged. The range must not partially span any merge."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range within which all cells should be unmerged. If the range spans multiple merges -->"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will unmerge cells in the range."
websocketaction0="92.000000"
[buttons_6x2]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Merge # Cells"
color="16727040.000000"
group_id=""
button_id="ID177"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6="MERGE_ROWS"
websocketvalue4_6="C7:D8"
websocketvalue3_6=""
websocketvalue2_6="/$spreadsheetID$/"
websocketvalue1_6="Google Sheets Merge Cells"
websocketaction6="71.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="In our example we will merge all name and points cells. "
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="mergeType = How the cells should be merged."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = The range of cells to merge."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will merge all cells in the range."
websocketaction0="92.000000"
[buttons_5x2]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="13.#Randomize"
color="16727040.000000"
group_id=""
button_id="ID171"
websocketdelay5="0.000000"
websocketvalue8_5="Saturday;Monday;Friday;Bla"
websocketvalue7_5="OVERWRITE"
websocketvalue6_5="My Stack"
websocketvalue5_5="true"
websocketvalue4_5="B2:B7"
websocketvalue3_5=""
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Randomize"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="***EXAMPLE: We can randomize all user points. They sure are going to love it :)"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = the range to randomize. Example: A1:A10"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will randomize the order of the rows in a range"
websocketaction0="92.000000"
[buttons_4x2]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="12. Batch # Update"
color="16727040.000000"
group_id=""
button_id="ID164"
websocketdelay12="10.000000"
websocketvalue8_12=""
websocketvalue7_12="Melonax|100"
websocketvalue6_12="USER_ENTERED"
websocketvalue5_12="ROWS"
websocketvalue4_12="A7:B7"
websocketvalue3_12=""
websocketvalue2_12="/$spreadsheetID$/"
websocketvalue1_12="Google Sheets Update Data"
websocketaction12="71.000000"
websocketdelay11="10.000000"
websocketvalue8_11=""
websocketvalue7_11="Ramsreef|40"
websocketvalue6_11="USER_ENTERED"
websocketvalue5_11="ROWS"
websocketvalue4_11="A6:B6"
websocketvalue3_11=""
websocketvalue2_11="/$spreadsheetID$/"
websocketvalue1_11="Google Sheets Update Data"
websocketaction11="71.000000"
websocketdelay10="10.000000"
websocketvalue8_10=""
websocketvalue7_10="Daryl|20"
websocketvalue6_10="USER_ENTERED"
websocketvalue5_10="ROWS"
websocketvalue4_10="A5:B5"
websocketvalue3_10=""
websocketvalue2_10="/$spreadsheetID$/"
websocketvalue1_10="Google Sheets Update Data"
websocketaction10="71.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9="Get Data"
websocketvalue4_9=""
websocketvalue3_9="1"
websocketvalue2_9="3"
websocketvalue1_9="Google Sheets Batch Update"
websocketaction9="71.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="***EXAMPLE: We add 3 more users and their points. "
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="(returnStack does not return any stacks if it's a batch request) "
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="Batch update example for 3 separate rows below: "
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="to send them all at once. You must send them all within 10 seconds, else the queue will be cleared."
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="Extension automatically queues up all incoming Update Data requests and waits for the last request --> "
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="2. send all your Update Data requests just as you normally would"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="1. Send 'Google Sheets Batch Update' command and specify the number of requests ."
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="Else you might run out of your assigned quota and not be able to send more requests for some time. "
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Want to Update Data in multiple columns at once? Don't send single requests, but use Batch request. "
websocketaction0="92.000000"
[buttons_3x2]
activepress="0.000000"
border_size="0.000000"
combine="1009.000000"
type="nothing"
[buttons_2x2]
activepress="0.000000"
border_size="0.000000"
combine="9.000000"
type="websocketaction+"
picture=""
text="5. Update # by Stack"
color="8718542.000000"
group_id=""
button_id="ID81"
websocketdelay21="0.000000"
websocketvalue8_21=""
websocketvalue7_21=""
websocketvalue6_21=""
websocketvalue5_21=""
websocketvalue4_21=""
websocketvalue3_21=""
websocketvalue2_21=""
websocketvalue1_21="this is useful if you want to use a formula in your updated cell and return its result immediately"
websocketaction21="92.000000"
websocketdelay20="0.000000"
websocketvalue8_20=""
websocketvalue7_20=""
websocketvalue6_20=""
websocketvalue5_20=""
websocketvalue4_20=""
websocketvalue3_20=""
websocketvalue2_20=""
websocketvalue1_20="returnStack - stack name IF you want to return the updated values in a stack (row/column) -->"
websocketaction20="92.000000"
websocketdelay19="0.000000"
websocketvalue8_19=""
websocketvalue7_19=""
websocketvalue6_19=""
websocketvalue5_19=""
websocketvalue4_19=""
websocketvalue3_19=""
websocketvalue2_19=""
websocketvalue1_19="InputType USER_ENTERED  = values are parsed as if you typed them normally. RAW = not parsed. "
websocketaction19="92.000000"
websocketdelay18="0.000000"
websocketvalue8_18=""
websocketvalue7_18=""
websocketvalue6_18=""
websocketvalue5_18=""
websocketvalue4_18=""
websocketvalue3_18=""
websocketvalue2_18=""
websocketvalue1_18="Dimension = whether you're appending data by rows or columns "
websocketaction18="92.000000"
websocketdelay17="0.000000"
websocketvalue8_17=""
websocketvalue7_17=""
websocketvalue6_17=""
websocketvalue5_17=""
websocketvalue4_17=""
websocketvalue3_17=""
websocketvalue2_17=""
websocketvalue1_17="--> must be either a single column or a single row, i.e. A1:A10 or A1:F1 "
websocketaction17="92.000000"
websocketdelay16="0.000000"
websocketvalue8_16=""
websocketvalue7_16=""
websocketvalue6_16=""
websocketvalue5_16=""
websocketvalue4_16=""
websocketvalue3_16=""
websocketvalue2_16=""
websocketvalue1_16="Range = range used to search for existing data and find a þtableþ within that range -->"
websocketaction16="92.000000"
websocketdelay15="0.000000"
websocketvalue8_15=""
websocketvalue7_15=""
websocketvalue6_15=""
websocketvalue5_15=""
websocketvalue4_15=""
websocketvalue3_15=""
websocketvalue2_15=""
websocketvalue1_15="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction15="92.000000"
websocketdelay14="0.000000"
websocketvalue8_14=""
websocketvalue7_14=""
websocketvalue6_14=""
websocketvalue5_14=""
websocketvalue4_14=""
websocketvalue3_14=""
websocketvalue2_14=""
websocketvalue1_14="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction14="92.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13=""
websocketvalue2_13=""
websocketvalue1_13="***EXAMPLE: We are inserting a few months into our sheet."
websocketaction13="92.000000"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12="/$sheetStack_str$/"
websocketvalue6_12="USER_ENTERED"
websocketvalue5_12="COLUMNS"
websocketvalue4_12="C1:C4"
websocketvalue3_12=""
websocketvalue2_12="/$spreadsheetID$/"
websocketvalue1_12="Google Sheets Update Data"
websocketaction12="71.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="4.  Insert the stringified stack variable in your Values field. Must be wrapped in /$$/."
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10="'"
websocketvalue2_10="þ"
websocketvalue1_10="sheetStack_str"
websocketaction10="43.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="3. Use 'String:Replace' command on your variable from step 2 to replace þ with ' (LB cannot parse double quotes). "
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8="sheetStack_str"
websocketvalue1_8="sheetStack"
websocketaction8="82.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="2. Use 'Stack: Stringify' command to save the stringified stack into a string instead. "
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6="þJanuaryþ"
websocketvalue2_6="top"
websocketvalue1_6="sheetStack"
websocketaction6="129.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5="þFebruaryþ"
websocketvalue2_5="top"
websocketvalue1_5="sheetStack"
websocketaction5="129.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4="þMarchþ"
websocketvalue2_4="top"
websocketvalue1_4="sheetStack"
websocketaction4="129.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3="þMonthþ"
websocketvalue2_3="top"
websocketvalue1_3="sheetStack"
websocketaction3="129.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="sheetStack"
websocketaction2="80.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="1. Create your stack and add some values. Each stack value is treated as one cell. "
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="You can update a whole stack to a row/column. This will overwrite any preexisting data. Example follows: "
websocketaction0="92.000000"
[buttons_1x2]
activepress="0.000000"
border_size="0.000000"
combine="1008.000000"
type="nothing"
[buttons_0x2]
activepress="0.000000"
border_size="0.000000"
combine="8.000000"
type="websocketaction+"
picture=""
text="4. Update # by Value"
color="8718542.000000"
group_id=""
button_id="ID160"
websocketdelay15="0.000000"
websocketvalue8_15=""
websocketvalue7_15=""
websocketvalue6_15=""
websocketvalue5_15=""
websocketvalue4_15=""
websocketvalue3_15=""
websocketvalue2_15=""
websocketvalue1_15="***EXAMPLE: The 'updated' stack now contains 'Total Points' and '45' which is the sum of 5, 10 and 30"
websocketaction15="92.000000"
websocketdelay14="0.000000"
websocketvalue8_14="updated"
websocketvalue7_14="/$updateValues$/"
websocketvalue6_14="USER_ENTERED"
websocketvalue5_14="ROWS"
websocketvalue4_14="A6:B6"
websocketvalue3_14=""
websocketvalue2_14="/$spreadsheetID$/"
websocketvalue1_14="Google Sheets Update Data"
websocketaction14="71.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13="þTotal Points|=SUM(B2:B5)þ"
websocketvalue2_13="="
websocketvalue1_13="updateValues"
websocketaction13="127.000000"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12=""
websocketvalue6_12=""
websocketvalue5_12=""
websocketvalue4_12=""
websocketvalue3_12=""
websocketvalue2_12=""
websocketvalue1_12="Which should retrieve the total amount of points for Lioran, Sebas, and Melonax."
websocketaction12="92.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="***EXAMPLE: We can easily calculate the total amount of user points in range by using þ=SUM(B2:B5)þ -->"
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10=""
websocketvalue2_10=""
websocketvalue1_10="this is useful if you want to use a formula in your updated cell and return its result immediately"
websocketaction10="92.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="returnStack - stack name if you want to return the updated values in a stack -->"
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="( See 'Update by stack' button to send a whole stack instead. )"
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="Values - values separated by `| marking individual cells."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="InputType USER_ENTERED  = values are parsed as if the user typed them into the UI. RAW = not parsed. "
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Dimension = whether to write data by rows or columns "
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="Range = range to update the data. Must be a single row or column. Example: A1:A10."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="! Save your quota by using Batch Update button if you need to update more than one row or column."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will update (overwrite) any preexiting data in the selected range, one row or one column."
websocketaction0="92.000000"
[buttons_7x1]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="11. Split # Text"
color="1277183.000000"
group_id=""
button_id="ID167"
websocketdelay6="0.000000"
websocketvalue8_6="Saturday;Monday;Friday;Bla"
websocketvalue7_6="OVERWRITE"
websocketvalue6_6="USER_ENTERED"
websocketvalue5_6=":"
websocketvalue4_6="C7:C8"
websocketvalue3_6=""
websocketvalue2_6="/$spreadsheetID$/"
websocketvalue1_6="Google Sheets Split Text"
websocketaction6="71.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="***EXAMPLE: We split SUMMER:ne and SUMMER:ly into 4 separate cells by : delimiter"
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="delimiter = the delimiter to use (for example : or ,)."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = the source data range. This must span exactly one column."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command splits a column of text into multiple columns, based on a delimiter in each cell."
websocketaction0="92.000000"
[buttons_6x1]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="10. Find # Replace"
color="1277183.000000"
group_id=""
button_id="ID149"
websocketdelay12="0.000000"
websocketvalue8_12="false"
websocketvalue7_12="false"
websocketvalue6_12="SUMMER:"
websocketvalue5_12="ju"
websocketvalue4_12="C2:C10"
websocketvalue3_12=""
websocketvalue2_12="/$spreadsheetID$/"
websocketvalue1_12="Google Sheets Find Replace"
websocketaction12="71.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="In this case months June and July pass the check and we will end up with SUMMER:ly and SUMMER:ne"
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10=""
websocketvalue2_10=""
websocketvalue1_10="***EXAMPLE:  We can replace all þjuþ with þSUMMERþ and select false for match case/entire cell -->"
websocketaction10="92.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="matchEntireCell = true if the find value should match the entire cell."
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="matchCase = true if the search is case sensitive."
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="replace = value to use as the replacement"
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="Must follow Java regex rules: https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Example: find: þregex o.* (.*)þ, replace: þ$1 Helloþ -->"
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="Find = value to search (string). If you want to use regex, prefix the expression with 'regex' -->"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range to find/replace over.  Example: A1:A10."
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will find and replace data in cells over a range."
websocketaction0="92.000000"
[buttons_5x1]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="9. Auto # Fill"
color="1277183.000000"
group_id=""
button_id="ID166"
websocketdelay6="0.000000"
websocketvalue8_6="Saturday, Monday"
websocketvalue7_6="AutoFillStack"
websocketvalue6_6="true"
websocketvalue5_6="false"
websocketvalue4_6="C2:C10"
websocketvalue3_6=""
websocketvalue2_6="/$spreadsheetID$/"
websocketvalue1_6="Google Sheets Auto Fill"
websocketaction6="71.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="***EXAMPLE: We can auto fill the months in cells C2:C10"
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="useAlternateSeris = generate data with the þalternateþ series. Differs based on the type and amount of data."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range to autofill.  Example: A1:A10"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Fills in more data based on existing data."
websocketaction0="92.000000"
[buttons_4x1]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="8. Sort # Range"
color="1277183.000000"
group_id=""
button_id="ID169"
websocketdelay8="0.000000"
websocketvalue8_8="My Stack"
websocketvalue7_8="true"
websocketvalue6_8="1"
websocketvalue5_8="DESCENDING"
websocketvalue4_8="A2:C4"
websocketvalue3_8=""
websocketvalue2_8="/$spreadsheetID$/"
websocketvalue1_8="Google Sheets Sort Range"
websocketaction8="71.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="points and months and dimIndex will be 1 (which is column B containing the points)"
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="***EXAMPLE: We sort users by their points. I.E. range will be A2:C4 to cover all names, -->"
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="dimIndex = The dimension (column) the sort should be applied to. For example B or 1 (which is same as column B).
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="sortOrder = the order the data should be sorted."
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = The range to sort.  Example: A1:A10"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This command will sort data in rows based on a sort order per column."
websocketaction0="92.000000"
[buttons_3x1]
activepress="0.000000"
border_size="0.000000"
combine="1007.000000"
type="nothing"
[buttons_2x1]
activepress="0.000000"
border_size="0.000000"
combine="7.000000"
type="websocketaction+"
picture=""
text="3. Append # by Stack"
color="180206.000000"
group_id=""
button_id="ID80"
websocketdelay20="0.000000"
websocketvalue8_20=""
websocketvalue7_20=""
websocketvalue6_20=""
websocketvalue5_20=""
websocketvalue4_20=""
websocketvalue3_20=""
websocketvalue2_20=""
websocketvalue1_20="insertType: OVERWRITE= write into any blank rows in between, INSERT_ROWS = maintain the gap"
websocketaction20="92.000000"
websocketdelay19="0.000000"
websocketvalue8_19=""
websocketvalue7_19=""
websocketvalue6_19=""
websocketvalue5_19=""
websocketvalue4_19=""
websocketvalue3_19=""
websocketvalue2_19=""
websocketvalue1_19="InputType USER_ENTERED  = values are parsed as if you typed them normally. RAW = not parsed. "
websocketaction19="92.000000"
websocketdelay18="0.000000"
websocketvalue8_18=""
websocketvalue7_18=""
websocketvalue6_18=""
websocketvalue5_18=""
websocketvalue4_18=""
websocketvalue3_18=""
websocketvalue2_18=""
websocketvalue1_18="Dimension = whether you're appending data by rows or columns "
websocketaction18="92.000000"
websocketdelay17="0.000000"
websocketvalue8_17=""
websocketvalue7_17=""
websocketvalue6_17=""
websocketvalue5_17=""
websocketvalue4_17=""
websocketvalue3_17=""
websocketvalue2_17=""
websocketvalue1_17="--> must be either a single column or a single row, i.e. A1:A10 or A1:F1 "
websocketaction17="92.000000"
websocketdelay16="0.000000"
websocketvalue8_16=""
websocketvalue7_16=""
websocketvalue6_16=""
websocketvalue5_16=""
websocketvalue4_16=""
websocketvalue3_16=""
websocketvalue2_16=""
websocketvalue1_16="Range = range used to search for existing data and find a þtableþ within that range -->"
websocketaction16="92.000000"
websocketdelay15="0.000000"
websocketvalue8_15=""
websocketvalue7_15=""
websocketvalue6_15=""
websocketvalue5_15=""
websocketvalue4_15=""
websocketvalue3_15=""
websocketvalue2_15=""
websocketvalue1_15="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction15="92.000000"
websocketdelay14="0.000000"
websocketvalue8_14=""
websocketvalue7_14=""
websocketvalue6_14=""
websocketvalue5_14=""
websocketvalue4_14=""
websocketvalue3_14=""
websocketvalue2_14=""
websocketvalue1_14="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction14="92.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13=""
websocketvalue2_13=""
websocketvalue1_13="***EXAMPLE: We're inserting some user points to the sheet."
websocketaction13="92.000000"
websocketdelay12="0.000000"
websocketvalue8_12="/$sheetStack_str$/"
websocketvalue7_12="OVERWRITE"
websocketvalue6_12="USER_ENTERED"
websocketvalue5_12="COLUMNS"
websocketvalue4_12="B1:D1"
websocketvalue3_12=""
websocketvalue2_12="/$spreadsheetID$/"
websocketvalue1_12="Google Sheets Append Data"
websocketaction12="71.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="4.  Insert the stringified stack variable in your Values field. Must be wrapped in /$$/."
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10="'"
websocketvalue2_10="þ"
websocketvalue1_10="sheetStack_str"
websocketaction10="43.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="3. Use 'String:Replace' command on your variable to replace þ with ' (LB cannot parse double quotes). "
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8="sheetStack_str"
websocketvalue1_8="sheetStack"
websocketaction8="82.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="2. Use 'Stack: Stringify' command to save the stringified stack into a string variable instead."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6="30"
websocketvalue2_6="top"
websocketvalue1_6="sheetStack"
websocketaction6="129.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5="10"
websocketvalue2_5="top"
websocketvalue1_5="sheetStack"
websocketaction5="129.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4="5"
websocketvalue2_4="top"
websocketvalue1_4="sheetStack"
websocketaction4="129.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3="þPointsþ"
websocketvalue2_3="top"
websocketvalue1_3="sheetStack"
websocketaction3="129.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="1. Create your stack and add some values. Each stack value is treated as one cell. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="You can append a whole stack to a row/column. Example follows: "
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="sheetStack"
websocketaction0="80.000000"
[buttons_1x1]
activepress="0.000000"
border_size="0.000000"
combine="1001.000000"
type="nothing"
[buttons_0x1]
activepress="0.000000"
border_size="0.000000"
combine="1.000000"
type="websocketaction+"
picture=""
text="2. Append # by Value"
color="180206.000000"
group_id=""
button_id="ID127"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12=""
websocketvalue6_12=""
websocketvalue5_12=""
websocketvalue4_12=""
websocketvalue3_12=""
websocketvalue2_12=""
websocketvalue1_12="***EXAMPLE: We will append a few names to our sheet."
websocketaction12="92.000000"
websocketdelay11="0.000000"
websocketvalue8_11="/$appendValues$/"
websocketvalue7_11="INSERT_ROWS"
websocketvalue6_11="USER_ENTERED"
websocketvalue5_11="COLUMNS"
websocketvalue4_11="A1:A4"
websocketvalue3_11=""
websocketvalue2_11="/$spreadsheetID$/"
websocketvalue1_11="Google Sheets Append Data"
websocketaction11="71.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10="þName|Lioran|Sebas|Melonaxþ"
websocketvalue2_10="="
websocketvalue1_10="appendValues"
websocketaction10="127.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="( See 'Append by stack' button to append a whole stack instead. )"
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8=""
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="Values - variable containing values separated by | marking individual cells. "
websocketaction8="92.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="insertType: OVERWRITE= write into any blank rows in between, INSERT_ROWS = maintain the gap"
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="InputType USER_ENTERED  = values are parsed as if you typed them normally. RAW = not parsed. "
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Dimension = whether you're appending data by rows or columns "
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="--> must be either a single column or a single row, i.e. A1:A10 (1 column) or A1:F1 (1 row)"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = range used to search for existing data and find a þtableþ within that range -->"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = Sheet name. If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Appends values to a specified range by a single row or column"
websocketaction0="92.000000"
[buttons_7x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Copy # Paste"
color="54534.000000"
group_id=""
button_id="ID174"
websocketdelay8="0.000000"
websocketvalue8_8="NORMAL"
websocketvalue7_8="PASTE_NORMAL"
websocketvalue6_8="E1:G10"
websocketvalue5_8="Sheet1"
websocketvalue4_8="A1:C10"
websocketvalue3_8="Sheet1"
websocketvalue2_8="/$spreadsheetID$/"
websocketvalue1_8="Google Sheets Copy Paste"
websocketaction8="71.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="pasteOrientation = how the pasted data should be oriented. Transpose = all rows become columns and vice versa."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="PasteType = what kind of data to paste"
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="TargetRange - range to paste to"
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="TargetSheet - sheet name to paste to"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Range = source range to copy. Example: A1:A10"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SheetName = source sheet name to copy."
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Copies data from the source sheet to the destination sheet."
websocketaction0="92.000000"
[buttons_6x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Add # Sheet"
color="54534.000000"
group_id=""
button_id="ID165"
websocketdelay4="0.000000"
websocketvalue8_4="Saturday, Monday"
websocketvalue7_4="Saturday;Monday;Friday;Bla"
websocketvalue6_4="USER_ENTERED"
websocketvalue5_4="false"
websocketvalue4_4="1"
websocketvalue3_4="My New Sheet"
websocketvalue2_4="/$spreadsheetID$/"
websocketvalue1_4="Google Sheets Add Sheet"
websocketaction4="71.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Hidden = whether you want to make the sheet hidden"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="Index = Index of your new sheet"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="Title = name of your new sheet"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Adds a new sheet to the selected spreadsheet. "
websocketaction0="92.000000"
[buttons_5x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="Duplicate # Sheet"
color="54534.000000"
group_id=""
button_id="ID123"
websocketdelay5="0.000000"
websocketvalue8_5="Saturday;Monday;Friday;Bla"
websocketvalue7_5="OVERWRITE"
websocketvalue6_5="USER_ENTERED"
websocketvalue5_5="1"
websocketvalue4_5="My Duplicate Sheet"
websocketvalue3_5="Sheet1"
websocketvalue2_5="/$spreadsheetID$/"
websocketvalue1_5="Google Sheets Duplicate Sheet"
websocketaction5="71.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="insertSheetIndex = Index of the new sheet "
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="newSheetName = name for the new sheet"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="SourceSheetName = Sheet name you wish to duplicate.  If left empty, defaults to the first Sheet. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="SpreadSheetID = your spreadsheet ID (extracted from its URL)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Duplicates a sheet within a spreadsheet. "
websocketaction0="92.000000"
[buttons_4x0]
activepress="0.000000"
border_size="0.000000"
combine="1006.000000"
type="nothing"
[buttons_3x0]
activepress="0.000000"
border_size="0.000000"
combine="6.000000"
type="websocketaction+"
picture=""
text="1. Create # SpreadSheet"
color="54534.000000"
group_id=""
button_id="ID170"
websocketdelay14="0.000000"
websocketvalue8_14=""
websocketvalue7_14=""
websocketvalue6_14=""
websocketvalue5_14=""
websocketvalue4_14=""
websocketvalue3_14=""
websocketvalue2_14=""
websocketvalue1_14="remember or look up your spreadsheet ID for each command. "
websocketaction14="92.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13=""
websocketvalue2_13=""
websocketvalue1_13="You can now go back to your INIT button and set up the spreadsheetID variable so you don't have to "
websocketaction13="92.000000"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12=""
websocketvalue6_12=""
websocketvalue5_12=""
websocketvalue4_12=""
websocketvalue3_12=""
websocketvalue2_12=""
websocketvalue1_12="https://docs.google.com/spreadsheets/d/<YOUR_SPREADSHEET_ID>/edit#gid=0"
websocketaction12="92.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="If you click on your newly created spreadshet, its ID will be part of the URL, i.e. "
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10=""
websocketvalue2_10=""
websocketvalue1_10="Your newly created spreadsheet should show up at https://docs.google.com/spreadsheets/u/0/ "
websocketaction10="92.000000"
websocketdelay9="2500.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="https://docs.google.com/spreadsheets/d//$spreadsheetID$//edit#gid=0"
websocketaction9="67.000000"
websocketdelay8="0.000000"
websocketvalue8_8="Saturday;Monday;Friday;Bla"
websocketvalue7_8="OVERWRITE"
websocketvalue6_8=""
websocketvalue5_8=""
websocketvalue4_8=""
websocketvalue3_8="spreadsheetID"
websocketvalue2_8="Testing Spreadsheet"
websocketvalue1_8="Google Sheets Create Spreadsheet"
websocketaction8="71.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="The sheet is needed for Find Data command as it uses a formula to calculate the result. "
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="This will also create a hidden sheet `Lookup_Sheet` in your new spreadsheet. Do not delete it. -->"
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="All spreadsheets used with this extension must be made and keep public, else it can't modify any data."
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="Make your newly created spreadsheet public. https://i.imgur.com/JMjvPyX.mp4"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="Variable - variable name to save the newly created spreadsheet ID into "
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="Title = name of your new spreadsheet."
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="(This extension only works with spreadsheets you previously created with this particular command.)"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Creates a new spreadsheet. "
websocketaction0="92.000000"
[buttons_2x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+pubsubaction+"
picture=""
text="OPTIONS"
color="215.000000"
group_id=""
button_id="ID176"
extensiontrigger0="!transmitteralways"
pubsubaction0="7.000000"
pubsubqueue="0.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Default commands (always displayed): Get Data, Append Data, Update (batch) Data, Find Data, Sort Range."
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4="true"
websocketvalue7_4="true"
websocketvalue6_4="true"
websocketvalue5_4="true"
websocketvalue4_4="true"
websocketvalue3_4="true"
websocketvalue2_4="true"
websocketvalue1_4="Google Sheets OPTIONS 2"
websocketaction4="71.000000"
websocketdelay3="0.000000"
websocketvalue8_3="true"
websocketvalue7_3="true"
websocketvalue6_3="true"
websocketvalue5_3="true"
websocketvalue4_3="true"
websocketvalue3_3="true"
websocketvalue2_3="true"
websocketvalue1_3="Google Sheets OPTIONS 1"
websocketaction3="71.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="Once you set it up, press this button and all commands set to true should be accessible to you now."
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="True = display, False = do not display. This is to prevent clutter in the Extension drop down menu."
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Choose which extension commands you wish to use and display in your 'Send to Extension command'. -->"
websocketaction0="92.000000"
[buttons_1x0]
activepress="0.000000"
border_size="0.000000"
combine="1005.000000"
type="nothing"
[buttons_0x0]
activepress="0.000000"
border_size="0.000000"
combine="5.000000"
type="websocketaction+pubsubaction+"
picture=""
text="INIT"
color="215.000000"
group_id=""
button_id="ID152"
extensiontrigger0="!transmitteralways"
pubsubaction0="7.000000"
pubsubqueue="0.000000"
websocketdelay17="0.000000"
websocketvalue8_17=""
websocketvalue7_17=""
websocketvalue6_17=""
websocketvalue5_17=""
websocketvalue4_17=""
websocketvalue3_17=""
websocketvalue2_17=""
websocketvalue1_17="(if your Transmtter is an OBS dock, the safest way is to completely close your OBS and reopen it again) "
websocketaction17="92.000000"
websocketdelay16="0.000000"
websocketvalue8_16=""
websocketvalue7_16=""
websocketvalue6_16=""
websocketvalue5_16=""
websocketvalue4_16=""
websocketvalue3_16=""
websocketvalue2_16=""
websocketvalue1_16="becomes Sheet2 and Sheet2 becomes Sheet1), you must completely close and reopen Transmitter. --> "
websocketaction16="92.000000"
websocketdelay15="0.000000"
websocketvalue8_15=""
websocketvalue7_15=""
websocketvalue6_15=""
websocketvalue5_15=""
websocketvalue4_15=""
websocketvalue3_15=""
websocketvalue2_15=""
websocketvalue1_15="If you rename a sheet to another sheet's name that previously existed in your SpreadSheet (i.e. Sheet1 -->"
websocketaction15="92.000000"
websocketdelay14="0.000000"
websocketvalue8_14=""
websocketvalue7_14=""
websocketvalue6_14=""
websocketvalue5_14=""
websocketvalue4_14=""
websocketvalue3_14=""
websocketvalue2_14=""
websocketvalue1_14="The extension converts your sheet name to your sheet ID to make it easier for you to work with.  -->"
websocketaction14="92.000000"
websocketdelay13="0.000000"
websocketvalue8_13=""
websocketvalue7_13=""
websocketvalue6_13=""
websocketvalue5_13=""
websocketvalue4_13=""
websocketvalue3_13=""
websocketvalue2_13=""
websocketvalue1_13="number 2.-15. (not editing anything) in the order. They show good examples of how to use the extension."
websocketaction13="92.000000"
websocketdelay12="0.000000"
websocketvalue8_12=""
websocketvalue7_12=""
websocketvalue6_12=""
websocketvalue5_12=""
websocketvalue4_12=""
websocketvalue3_12=""
websocketvalue2_12=""
websocketvalue1_12="Use create Spreadsheet button first before using any other commands. Then follow with commands -->"
websocketaction12="92.000000"
websocketdelay11="0.000000"
websocketvalue8_11=""
websocketvalue7_11=""
websocketvalue6_11=""
websocketvalue5_11=""
websocketvalue4_11=""
websocketvalue3_11=""
websocketvalue2_11=""
websocketvalue1_11="Important: This extension only works with spreadsheets you previously created with it. --> "
websocketaction11="92.000000"
websocketdelay10="0.000000"
websocketvalue8_10=""
websocketvalue7_10=""
websocketvalue6_10=""
websocketvalue5_10=""
websocketvalue4_10=""
websocketvalue3_10="þ1XOD11mngFC6FsgNsxhLkovony-DiEaZQIAMbRHBIucMþ"
websocketvalue2_10="="
websocketvalue1_10="spreadsheetID"
websocketaction10="127.000000"
websocketdelay9="0.000000"
websocketvalue8_9=""
websocketvalue7_9=""
websocketvalue6_9=""
websocketvalue5_9=""
websocketvalue4_9=""
websocketvalue3_9=""
websocketvalue2_9=""
websocketvalue1_9="This is useful to set up in your INIT button if you have only one spreadsheet to work with. "
websocketaction9="92.000000"
websocketdelay8="0.000000"
websocketvalue8_8="true"
websocketvalue7_8=""
websocketvalue6_8=""
websocketvalue5_8="true"
websocketvalue4_8=""
websocketvalue3_8=""
websocketvalue2_8=""
websocketvalue1_8="Google Sheets INIT"
websocketaction8="71.000000"
websocketdelay7="0.000000"
websocketvalue8_7=""
websocketvalue7_7=""
websocketvalue6_7=""
websocketvalue5_7=""
websocketvalue4_7=""
websocketvalue3_7=""
websocketvalue2_7=""
websocketvalue1_7="RELOAD TRANSMITTER OR PRESS THIS BUTTON AGAIN EVERY TIME YOU EDIT IT."
websocketaction7="92.000000"
websocketdelay6="0.000000"
websocketvalue8_6=""
websocketvalue7_6=""
websocketvalue6_6=""
websocketvalue5_6=""
websocketvalue4_6=""
websocketvalue3_6=""
websocketvalue2_6=""
websocketvalue1_6="If you require additional commands, edit 'Options' button and press it to load them up."
websocketaction6="92.000000"
websocketdelay5="0.000000"
websocketvalue8_5=""
websocketvalue7_5=""
websocketvalue6_5=""
websocketvalue5_5=""
websocketvalue4_5=""
websocketvalue3_5=""
websocketvalue2_5=""
websocketvalue1_5="Default commands: Get Data, Find Data, Append Data, Update Data, Sort Range."
websocketaction5="92.000000"
websocketdelay4="0.000000"
websocketvalue8_4=""
websocketvalue7_4=""
websocketvalue6_4=""
websocketvalue5_4=""
websocketvalue4_4=""
websocketvalue3_4=""
websocketvalue2_4=""
websocketvalue1_4="ShowAlerts = whether to show yellow messages for successful requests. (errors are always shown)"
websocketaction4="92.000000"
websocketdelay3="0.000000"
websocketvalue8_3=""
websocketvalue7_3=""
websocketvalue6_3=""
websocketvalue5_3=""
websocketvalue4_3=""
websocketvalue3_3=""
websocketvalue2_3=""
websocketvalue1_3="itchKey = itchKey you retrieved after you purchased the extension on Itch.io"
websocketaction3="92.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="apiKey = your google API key. Video guide: https://www.youtube.com/watch?v=oDCYJ33uu5o"
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="refreshToken = your Google API refresh token, press 'Get Refresh Token' button to open URL to retrieve it"
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Full setup guide here: https://christinna9031.github.io/LBDocumentation/externalext.html#Googlesheets "
websocketaction0="92.000000"
[configs]
name="Google Sheets"
background_color="0.000000"
grid_height="5.000000"
grid_width="8.000000"